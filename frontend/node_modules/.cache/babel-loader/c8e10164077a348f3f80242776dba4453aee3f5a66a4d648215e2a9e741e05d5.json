{"ast":null,"code":"/* [@simplewebauthn/browser@10.0.0] */\nfunction bufferToBase64URLString(buffer) {\n  const bytes = new Uint8Array(buffer);\n  let str = '';\n  for (const charCode of bytes) {\n    str += String.fromCharCode(charCode);\n  }\n  const base64String = btoa(str);\n  return base64String.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=/g, '');\n}\nfunction base64URLStringToBuffer(base64URLString) {\n  const base64 = base64URLString.replace(/-/g, '+').replace(/_/g, '/');\n  const padLength = (4 - base64.length % 4) % 4;\n  const padded = base64.padEnd(base64.length + padLength, '=');\n  const binary = atob(padded);\n  const buffer = new ArrayBuffer(binary.length);\n  const bytes = new Uint8Array(buffer);\n  for (let i = 0; i < binary.length; i++) {\n    bytes[i] = binary.charCodeAt(i);\n  }\n  return buffer;\n}\nfunction browserSupportsWebAuthn() {\n  return window?.PublicKeyCredential !== undefined && typeof window.PublicKeyCredential === 'function';\n}\nfunction toPublicKeyCredentialDescriptor(descriptor) {\n  const {\n    id\n  } = descriptor;\n  return {\n    ...descriptor,\n    id: base64URLStringToBuffer(id),\n    transports: descriptor.transports\n  };\n}\nfunction isValidDomain(hostname) {\n  return hostname === 'localhost' || /^([a-z0-9]+(-[a-z0-9]+)*\\.)+[a-z]{2,}$/i.test(hostname);\n}\nclass WebAuthnError extends Error {\n  constructor({\n    message,\n    code,\n    cause,\n    name\n  }) {\n    super(message, {\n      cause\n    });\n    this.name = name ?? cause.name;\n    this.code = code;\n  }\n}\nfunction identifyRegistrationError({\n  error,\n  options\n}) {\n  const {\n    publicKey\n  } = options;\n  if (!publicKey) {\n    throw Error('options was missing required publicKey property');\n  }\n  if (error.name === 'AbortError') {\n    if (options.signal instanceof AbortSignal) {\n      return new WebAuthnError({\n        message: 'Registration ceremony was sent an abort signal',\n        code: 'ERROR_CEREMONY_ABORTED',\n        cause: error\n      });\n    }\n  } else if (error.name === 'ConstraintError') {\n    if (publicKey.authenticatorSelection?.requireResidentKey === true) {\n      return new WebAuthnError({\n        message: 'Discoverable credentials were required but no available authenticator supported it',\n        code: 'ERROR_AUTHENTICATOR_MISSING_DISCOVERABLE_CREDENTIAL_SUPPORT',\n        cause: error\n      });\n    } else if (publicKey.authenticatorSelection?.userVerification === 'required') {\n      return new WebAuthnError({\n        message: 'User verification was required but no available authenticator supported it',\n        code: 'ERROR_AUTHENTICATOR_MISSING_USER_VERIFICATION_SUPPORT',\n        cause: error\n      });\n    }\n  } else if (error.name === 'InvalidStateError') {\n    return new WebAuthnError({\n      message: 'The authenticator was previously registered',\n      code: 'ERROR_AUTHENTICATOR_PREVIOUSLY_REGISTERED',\n      cause: error\n    });\n  } else if (error.name === 'NotAllowedError') {\n    return new WebAuthnError({\n      message: error.message,\n      code: 'ERROR_PASSTHROUGH_SEE_CAUSE_PROPERTY',\n      cause: error\n    });\n  } else if (error.name === 'NotSupportedError') {\n    const validPubKeyCredParams = publicKey.pubKeyCredParams.filter(param => param.type === 'public-key');\n    if (validPubKeyCredParams.length === 0) {\n      return new WebAuthnError({\n        message: 'No entry in pubKeyCredParams was of type \"public-key\"',\n        code: 'ERROR_MALFORMED_PUBKEYCREDPARAMS',\n        cause: error\n      });\n    }\n    return new WebAuthnError({\n      message: 'No available authenticator supported any of the specified pubKeyCredParams algorithms',\n      code: 'ERROR_AUTHENTICATOR_NO_SUPPORTED_PUBKEYCREDPARAMS_ALG',\n      cause: error\n    });\n  } else if (error.name === 'SecurityError') {\n    const effectiveDomain = window.location.hostname;\n    if (!isValidDomain(effectiveDomain)) {\n      return new WebAuthnError({\n        message: `${window.location.hostname} is an invalid domain`,\n        code: 'ERROR_INVALID_DOMAIN',\n        cause: error\n      });\n    } else if (publicKey.rp.id !== effectiveDomain) {\n      return new WebAuthnError({\n        message: `The RP ID \"${publicKey.rp.id}\" is invalid for this domain`,\n        code: 'ERROR_INVALID_RP_ID',\n        cause: error\n      });\n    }\n  } else if (error.name === 'TypeError') {\n    if (publicKey.user.id.byteLength < 1 || publicKey.user.id.byteLength > 64) {\n      return new WebAuthnError({\n        message: 'User ID was not between 1 and 64 characters',\n        code: 'ERROR_INVALID_USER_ID_LENGTH',\n        cause: error\n      });\n    }\n  } else if (error.name === 'UnknownError') {\n    return new WebAuthnError({\n      message: 'The authenticator was unable to process the specified options, or could not create a new credential',\n      code: 'ERROR_AUTHENTICATOR_GENERAL_ERROR',\n      cause: error\n    });\n  }\n  return error;\n}\nclass BaseWebAuthnAbortService {\n  createNewAbortSignal() {\n    if (this.controller) {\n      const abortError = new Error('Cancelling existing WebAuthn API call for new one');\n      abortError.name = 'AbortError';\n      this.controller.abort(abortError);\n    }\n    const newController = new AbortController();\n    this.controller = newController;\n    return newController.signal;\n  }\n  cancelCeremony() {\n    if (this.controller) {\n      const abortError = new Error('Manually cancelling existing WebAuthn API call');\n      abortError.name = 'AbortError';\n      this.controller.abort(abortError);\n      this.controller = undefined;\n    }\n  }\n}\nconst WebAuthnAbortService = new BaseWebAuthnAbortService();\nconst attachments = ['cross-platform', 'platform'];\nfunction toAuthenticatorAttachment(attachment) {\n  if (!attachment) {\n    return;\n  }\n  if (attachments.indexOf(attachment) < 0) {\n    return;\n  }\n  return attachment;\n}\nasync function startRegistration(optionsJSON) {\n  if (!browserSupportsWebAuthn()) {\n    throw new Error('WebAuthn is not supported in this browser');\n  }\n  const publicKey = {\n    ...optionsJSON,\n    challenge: base64URLStringToBuffer(optionsJSON.challenge),\n    user: {\n      ...optionsJSON.user,\n      id: base64URLStringToBuffer(optionsJSON.user.id)\n    },\n    excludeCredentials: optionsJSON.excludeCredentials?.map(toPublicKeyCredentialDescriptor)\n  };\n  const options = {\n    publicKey\n  };\n  options.signal = WebAuthnAbortService.createNewAbortSignal();\n  let credential;\n  try {\n    credential = await navigator.credentials.create(options);\n  } catch (err) {\n    throw identifyRegistrationError({\n      error: err,\n      options\n    });\n  }\n  if (!credential) {\n    throw new Error('Registration was not completed');\n  }\n  const {\n    id,\n    rawId,\n    response,\n    type\n  } = credential;\n  let transports = undefined;\n  if (typeof response.getTransports === 'function') {\n    transports = response.getTransports();\n  }\n  let responsePublicKeyAlgorithm = undefined;\n  if (typeof response.getPublicKeyAlgorithm === 'function') {\n    try {\n      responsePublicKeyAlgorithm = response.getPublicKeyAlgorithm();\n    } catch (error) {\n      warnOnBrokenImplementation('getPublicKeyAlgorithm()', error);\n    }\n  }\n  let responsePublicKey = undefined;\n  if (typeof response.getPublicKey === 'function') {\n    try {\n      const _publicKey = response.getPublicKey();\n      if (_publicKey !== null) {\n        responsePublicKey = bufferToBase64URLString(_publicKey);\n      }\n    } catch (error) {\n      warnOnBrokenImplementation('getPublicKey()', error);\n    }\n  }\n  let responseAuthenticatorData;\n  if (typeof response.getAuthenticatorData === 'function') {\n    try {\n      responseAuthenticatorData = bufferToBase64URLString(response.getAuthenticatorData());\n    } catch (error) {\n      warnOnBrokenImplementation('getAuthenticatorData()', error);\n    }\n  }\n  return {\n    id,\n    rawId: bufferToBase64URLString(rawId),\n    response: {\n      attestationObject: bufferToBase64URLString(response.attestationObject),\n      clientDataJSON: bufferToBase64URLString(response.clientDataJSON),\n      transports,\n      publicKeyAlgorithm: responsePublicKeyAlgorithm,\n      publicKey: responsePublicKey,\n      authenticatorData: responseAuthenticatorData\n    },\n    type,\n    clientExtensionResults: credential.getClientExtensionResults(),\n    authenticatorAttachment: toAuthenticatorAttachment(credential.authenticatorAttachment)\n  };\n}\nfunction warnOnBrokenImplementation(methodName, cause) {\n  console.warn(`The browser extension that intercepted this WebAuthn API call incorrectly implemented ${methodName}. You should report this error to them.\\n`, cause);\n}\nfunction browserSupportsWebAuthnAutofill() {\n  if (!browserSupportsWebAuthn()) {\n    return new Promise(resolve => resolve(false));\n  }\n  const globalPublicKeyCredential = window.PublicKeyCredential;\n  if (globalPublicKeyCredential.isConditionalMediationAvailable === undefined) {\n    return new Promise(resolve => resolve(false));\n  }\n  return globalPublicKeyCredential.isConditionalMediationAvailable();\n}\nfunction identifyAuthenticationError({\n  error,\n  options\n}) {\n  const {\n    publicKey\n  } = options;\n  if (!publicKey) {\n    throw Error('options was missing required publicKey property');\n  }\n  if (error.name === 'AbortError') {\n    if (options.signal instanceof AbortSignal) {\n      return new WebAuthnError({\n        message: 'Authentication ceremony was sent an abort signal',\n        code: 'ERROR_CEREMONY_ABORTED',\n        cause: error\n      });\n    }\n  } else if (error.name === 'NotAllowedError') {\n    return new WebAuthnError({\n      message: error.message,\n      code: 'ERROR_PASSTHROUGH_SEE_CAUSE_PROPERTY',\n      cause: error\n    });\n  } else if (error.name === 'SecurityError') {\n    const effectiveDomain = window.location.hostname;\n    if (!isValidDomain(effectiveDomain)) {\n      return new WebAuthnError({\n        message: `${window.location.hostname} is an invalid domain`,\n        code: 'ERROR_INVALID_DOMAIN',\n        cause: error\n      });\n    } else if (publicKey.rpId !== effectiveDomain) {\n      return new WebAuthnError({\n        message: `The RP ID \"${publicKey.rpId}\" is invalid for this domain`,\n        code: 'ERROR_INVALID_RP_ID',\n        cause: error\n      });\n    }\n  } else if (error.name === 'UnknownError') {\n    return new WebAuthnError({\n      message: 'The authenticator was unable to process the specified options, or could not create a new assertion signature',\n      code: 'ERROR_AUTHENTICATOR_GENERAL_ERROR',\n      cause: error\n    });\n  }\n  return error;\n}\nasync function startAuthentication(optionsJSON, useBrowserAutofill = false) {\n  if (!browserSupportsWebAuthn()) {\n    throw new Error('WebAuthn is not supported in this browser');\n  }\n  let allowCredentials;\n  if (optionsJSON.allowCredentials?.length !== 0) {\n    allowCredentials = optionsJSON.allowCredentials?.map(toPublicKeyCredentialDescriptor);\n  }\n  const publicKey = {\n    ...optionsJSON,\n    challenge: base64URLStringToBuffer(optionsJSON.challenge),\n    allowCredentials\n  };\n  const options = {};\n  if (useBrowserAutofill) {\n    if (!(await browserSupportsWebAuthnAutofill())) {\n      throw Error('Browser does not support WebAuthn autofill');\n    }\n    const eligibleInputs = document.querySelectorAll(\"input[autocomplete$='webauthn']\");\n    if (eligibleInputs.length < 1) {\n      throw Error('No <input> with \"webauthn\" as the only or last value in its `autocomplete` attribute was detected');\n    }\n    options.mediation = 'conditional';\n    publicKey.allowCredentials = [];\n  }\n  options.publicKey = publicKey;\n  options.signal = WebAuthnAbortService.createNewAbortSignal();\n  let credential;\n  try {\n    credential = await navigator.credentials.get(options);\n  } catch (err) {\n    throw identifyAuthenticationError({\n      error: err,\n      options\n    });\n  }\n  if (!credential) {\n    throw new Error('Authentication was not completed');\n  }\n  const {\n    id,\n    rawId,\n    response,\n    type\n  } = credential;\n  let userHandle = undefined;\n  if (response.userHandle) {\n    userHandle = bufferToBase64URLString(response.userHandle);\n  }\n  return {\n    id,\n    rawId: bufferToBase64URLString(rawId),\n    response: {\n      authenticatorData: bufferToBase64URLString(response.authenticatorData),\n      clientDataJSON: bufferToBase64URLString(response.clientDataJSON),\n      signature: bufferToBase64URLString(response.signature),\n      userHandle\n    },\n    type,\n    clientExtensionResults: credential.getClientExtensionResults(),\n    authenticatorAttachment: toAuthenticatorAttachment(credential.authenticatorAttachment)\n  };\n}\nfunction platformAuthenticatorIsAvailable() {\n  if (!browserSupportsWebAuthn()) {\n    return new Promise(resolve => resolve(false));\n  }\n  return PublicKeyCredential.isUserVerifyingPlatformAuthenticatorAvailable();\n}\nexport { WebAuthnAbortService, WebAuthnError, base64URLStringToBuffer, browserSupportsWebAuthn, browserSupportsWebAuthnAutofill, bufferToBase64URLString, platformAuthenticatorIsAvailable, startAuthentication, startRegistration };","map":{"version":3,"names":["bufferToBase64URLString","buffer","bytes","Uint8Array","str","charCode","String","fromCharCode","base64String","btoa","replace","base64URLStringToBuffer","base64URLString","base64","padLength","length","padded","padEnd","binary","atob","ArrayBuffer","i","charCodeAt","browserSupportsWebAuthn","window","PublicKeyCredential","undefined","toPublicKeyCredentialDescriptor","descriptor","id","transports","isValidDomain","hostname","test","WebAuthnError","Error","constructor","message","code","cause","name","identifyRegistrationError","error","options","publicKey","signal","AbortSignal","authenticatorSelection","requireResidentKey","userVerification","validPubKeyCredParams","pubKeyCredParams","filter","param","type","effectiveDomain","location","rp","user","byteLength","BaseWebAuthnAbortService","createNewAbortSignal","controller","abortError","abort","newController","AbortController","cancelCeremony","WebAuthnAbortService","attachments","toAuthenticatorAttachment","attachment","indexOf","startRegistration","optionsJSON","challenge","excludeCredentials","map","credential","navigator","credentials","create","err","rawId","response","getTransports","responsePublicKeyAlgorithm","getPublicKeyAlgorithm","warnOnBrokenImplementation","responsePublicKey","getPublicKey","_publicKey","responseAuthenticatorData","getAuthenticatorData","attestationObject","clientDataJSON","publicKeyAlgorithm","authenticatorData","clientExtensionResults","getClientExtensionResults","authenticatorAttachment","methodName","console","warn","browserSupportsWebAuthnAutofill","Promise","resolve","globalPublicKeyCredential","isConditionalMediationAvailable","identifyAuthenticationError","rpId","startAuthentication","useBrowserAutofill","allowCredentials","eligibleInputs","document","querySelectorAll","mediation","get","userHandle","signature","platformAuthenticatorIsAvailable","isUserVerifyingPlatformAuthenticatorAvailable"],"sources":["C:/Users/Admin/Desktop/enisi/frontend/node_modules/@simplewebauthn/browser/dist/bundle/index.js"],"sourcesContent":["/* [@simplewebauthn/browser@10.0.0] */\nfunction bufferToBase64URLString(buffer) {\n    const bytes = new Uint8Array(buffer);\n    let str = '';\n    for (const charCode of bytes) {\n        str += String.fromCharCode(charCode);\n    }\n    const base64String = btoa(str);\n    return base64String.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=/g, '');\n}\n\nfunction base64URLStringToBuffer(base64URLString) {\n    const base64 = base64URLString.replace(/-/g, '+').replace(/_/g, '/');\n    const padLength = (4 - (base64.length % 4)) % 4;\n    const padded = base64.padEnd(base64.length + padLength, '=');\n    const binary = atob(padded);\n    const buffer = new ArrayBuffer(binary.length);\n    const bytes = new Uint8Array(buffer);\n    for (let i = 0; i < binary.length; i++) {\n        bytes[i] = binary.charCodeAt(i);\n    }\n    return buffer;\n}\n\nfunction browserSupportsWebAuthn() {\n    return (window?.PublicKeyCredential !== undefined &&\n        typeof window.PublicKeyCredential === 'function');\n}\n\nfunction toPublicKeyCredentialDescriptor(descriptor) {\n    const { id } = descriptor;\n    return {\n        ...descriptor,\n        id: base64URLStringToBuffer(id),\n        transports: descriptor.transports,\n    };\n}\n\nfunction isValidDomain(hostname) {\n    return (hostname === 'localhost' ||\n        /^([a-z0-9]+(-[a-z0-9]+)*\\.)+[a-z]{2,}$/i.test(hostname));\n}\n\nclass WebAuthnError extends Error {\n    constructor({ message, code, cause, name, }) {\n        super(message, { cause });\n        this.name = name ?? cause.name;\n        this.code = code;\n    }\n}\n\nfunction identifyRegistrationError({ error, options, }) {\n    const { publicKey } = options;\n    if (!publicKey) {\n        throw Error('options was missing required publicKey property');\n    }\n    if (error.name === 'AbortError') {\n        if (options.signal instanceof AbortSignal) {\n            return new WebAuthnError({\n                message: 'Registration ceremony was sent an abort signal',\n                code: 'ERROR_CEREMONY_ABORTED',\n                cause: error,\n            });\n        }\n    }\n    else if (error.name === 'ConstraintError') {\n        if (publicKey.authenticatorSelection?.requireResidentKey === true) {\n            return new WebAuthnError({\n                message: 'Discoverable credentials were required but no available authenticator supported it',\n                code: 'ERROR_AUTHENTICATOR_MISSING_DISCOVERABLE_CREDENTIAL_SUPPORT',\n                cause: error,\n            });\n        }\n        else if (publicKey.authenticatorSelection?.userVerification === 'required') {\n            return new WebAuthnError({\n                message: 'User verification was required but no available authenticator supported it',\n                code: 'ERROR_AUTHENTICATOR_MISSING_USER_VERIFICATION_SUPPORT',\n                cause: error,\n            });\n        }\n    }\n    else if (error.name === 'InvalidStateError') {\n        return new WebAuthnError({\n            message: 'The authenticator was previously registered',\n            code: 'ERROR_AUTHENTICATOR_PREVIOUSLY_REGISTERED',\n            cause: error,\n        });\n    }\n    else if (error.name === 'NotAllowedError') {\n        return new WebAuthnError({\n            message: error.message,\n            code: 'ERROR_PASSTHROUGH_SEE_CAUSE_PROPERTY',\n            cause: error,\n        });\n    }\n    else if (error.name === 'NotSupportedError') {\n        const validPubKeyCredParams = publicKey.pubKeyCredParams.filter((param) => param.type === 'public-key');\n        if (validPubKeyCredParams.length === 0) {\n            return new WebAuthnError({\n                message: 'No entry in pubKeyCredParams was of type \"public-key\"',\n                code: 'ERROR_MALFORMED_PUBKEYCREDPARAMS',\n                cause: error,\n            });\n        }\n        return new WebAuthnError({\n            message: 'No available authenticator supported any of the specified pubKeyCredParams algorithms',\n            code: 'ERROR_AUTHENTICATOR_NO_SUPPORTED_PUBKEYCREDPARAMS_ALG',\n            cause: error,\n        });\n    }\n    else if (error.name === 'SecurityError') {\n        const effectiveDomain = window.location.hostname;\n        if (!isValidDomain(effectiveDomain)) {\n            return new WebAuthnError({\n                message: `${window.location.hostname} is an invalid domain`,\n                code: 'ERROR_INVALID_DOMAIN',\n                cause: error,\n            });\n        }\n        else if (publicKey.rp.id !== effectiveDomain) {\n            return new WebAuthnError({\n                message: `The RP ID \"${publicKey.rp.id}\" is invalid for this domain`,\n                code: 'ERROR_INVALID_RP_ID',\n                cause: error,\n            });\n        }\n    }\n    else if (error.name === 'TypeError') {\n        if (publicKey.user.id.byteLength < 1 || publicKey.user.id.byteLength > 64) {\n            return new WebAuthnError({\n                message: 'User ID was not between 1 and 64 characters',\n                code: 'ERROR_INVALID_USER_ID_LENGTH',\n                cause: error,\n            });\n        }\n    }\n    else if (error.name === 'UnknownError') {\n        return new WebAuthnError({\n            message: 'The authenticator was unable to process the specified options, or could not create a new credential',\n            code: 'ERROR_AUTHENTICATOR_GENERAL_ERROR',\n            cause: error,\n        });\n    }\n    return error;\n}\n\nclass BaseWebAuthnAbortService {\n    createNewAbortSignal() {\n        if (this.controller) {\n            const abortError = new Error('Cancelling existing WebAuthn API call for new one');\n            abortError.name = 'AbortError';\n            this.controller.abort(abortError);\n        }\n        const newController = new AbortController();\n        this.controller = newController;\n        return newController.signal;\n    }\n    cancelCeremony() {\n        if (this.controller) {\n            const abortError = new Error('Manually cancelling existing WebAuthn API call');\n            abortError.name = 'AbortError';\n            this.controller.abort(abortError);\n            this.controller = undefined;\n        }\n    }\n}\nconst WebAuthnAbortService = new BaseWebAuthnAbortService();\n\nconst attachments = ['cross-platform', 'platform'];\nfunction toAuthenticatorAttachment(attachment) {\n    if (!attachment) {\n        return;\n    }\n    if (attachments.indexOf(attachment) < 0) {\n        return;\n    }\n    return attachment;\n}\n\nasync function startRegistration(optionsJSON) {\n    if (!browserSupportsWebAuthn()) {\n        throw new Error('WebAuthn is not supported in this browser');\n    }\n    const publicKey = {\n        ...optionsJSON,\n        challenge: base64URLStringToBuffer(optionsJSON.challenge),\n        user: {\n            ...optionsJSON.user,\n            id: base64URLStringToBuffer(optionsJSON.user.id),\n        },\n        excludeCredentials: optionsJSON.excludeCredentials?.map(toPublicKeyCredentialDescriptor),\n    };\n    const options = { publicKey };\n    options.signal = WebAuthnAbortService.createNewAbortSignal();\n    let credential;\n    try {\n        credential = (await navigator.credentials.create(options));\n    }\n    catch (err) {\n        throw identifyRegistrationError({ error: err, options });\n    }\n    if (!credential) {\n        throw new Error('Registration was not completed');\n    }\n    const { id, rawId, response, type } = credential;\n    let transports = undefined;\n    if (typeof response.getTransports === 'function') {\n        transports = response.getTransports();\n    }\n    let responsePublicKeyAlgorithm = undefined;\n    if (typeof response.getPublicKeyAlgorithm === 'function') {\n        try {\n            responsePublicKeyAlgorithm = response.getPublicKeyAlgorithm();\n        }\n        catch (error) {\n            warnOnBrokenImplementation('getPublicKeyAlgorithm()', error);\n        }\n    }\n    let responsePublicKey = undefined;\n    if (typeof response.getPublicKey === 'function') {\n        try {\n            const _publicKey = response.getPublicKey();\n            if (_publicKey !== null) {\n                responsePublicKey = bufferToBase64URLString(_publicKey);\n            }\n        }\n        catch (error) {\n            warnOnBrokenImplementation('getPublicKey()', error);\n        }\n    }\n    let responseAuthenticatorData;\n    if (typeof response.getAuthenticatorData === 'function') {\n        try {\n            responseAuthenticatorData = bufferToBase64URLString(response.getAuthenticatorData());\n        }\n        catch (error) {\n            warnOnBrokenImplementation('getAuthenticatorData()', error);\n        }\n    }\n    return {\n        id,\n        rawId: bufferToBase64URLString(rawId),\n        response: {\n            attestationObject: bufferToBase64URLString(response.attestationObject),\n            clientDataJSON: bufferToBase64URLString(response.clientDataJSON),\n            transports,\n            publicKeyAlgorithm: responsePublicKeyAlgorithm,\n            publicKey: responsePublicKey,\n            authenticatorData: responseAuthenticatorData,\n        },\n        type,\n        clientExtensionResults: credential.getClientExtensionResults(),\n        authenticatorAttachment: toAuthenticatorAttachment(credential.authenticatorAttachment),\n    };\n}\nfunction warnOnBrokenImplementation(methodName, cause) {\n    console.warn(`The browser extension that intercepted this WebAuthn API call incorrectly implemented ${methodName}. You should report this error to them.\\n`, cause);\n}\n\nfunction browserSupportsWebAuthnAutofill() {\n    if (!browserSupportsWebAuthn()) {\n        return new Promise((resolve) => resolve(false));\n    }\n    const globalPublicKeyCredential = window\n        .PublicKeyCredential;\n    if (globalPublicKeyCredential.isConditionalMediationAvailable === undefined) {\n        return new Promise((resolve) => resolve(false));\n    }\n    return globalPublicKeyCredential.isConditionalMediationAvailable();\n}\n\nfunction identifyAuthenticationError({ error, options, }) {\n    const { publicKey } = options;\n    if (!publicKey) {\n        throw Error('options was missing required publicKey property');\n    }\n    if (error.name === 'AbortError') {\n        if (options.signal instanceof AbortSignal) {\n            return new WebAuthnError({\n                message: 'Authentication ceremony was sent an abort signal',\n                code: 'ERROR_CEREMONY_ABORTED',\n                cause: error,\n            });\n        }\n    }\n    else if (error.name === 'NotAllowedError') {\n        return new WebAuthnError({\n            message: error.message,\n            code: 'ERROR_PASSTHROUGH_SEE_CAUSE_PROPERTY',\n            cause: error,\n        });\n    }\n    else if (error.name === 'SecurityError') {\n        const effectiveDomain = window.location.hostname;\n        if (!isValidDomain(effectiveDomain)) {\n            return new WebAuthnError({\n                message: `${window.location.hostname} is an invalid domain`,\n                code: 'ERROR_INVALID_DOMAIN',\n                cause: error,\n            });\n        }\n        else if (publicKey.rpId !== effectiveDomain) {\n            return new WebAuthnError({\n                message: `The RP ID \"${publicKey.rpId}\" is invalid for this domain`,\n                code: 'ERROR_INVALID_RP_ID',\n                cause: error,\n            });\n        }\n    }\n    else if (error.name === 'UnknownError') {\n        return new WebAuthnError({\n            message: 'The authenticator was unable to process the specified options, or could not create a new assertion signature',\n            code: 'ERROR_AUTHENTICATOR_GENERAL_ERROR',\n            cause: error,\n        });\n    }\n    return error;\n}\n\nasync function startAuthentication(optionsJSON, useBrowserAutofill = false) {\n    if (!browserSupportsWebAuthn()) {\n        throw new Error('WebAuthn is not supported in this browser');\n    }\n    let allowCredentials;\n    if (optionsJSON.allowCredentials?.length !== 0) {\n        allowCredentials = optionsJSON.allowCredentials?.map(toPublicKeyCredentialDescriptor);\n    }\n    const publicKey = {\n        ...optionsJSON,\n        challenge: base64URLStringToBuffer(optionsJSON.challenge),\n        allowCredentials,\n    };\n    const options = {};\n    if (useBrowserAutofill) {\n        if (!(await browserSupportsWebAuthnAutofill())) {\n            throw Error('Browser does not support WebAuthn autofill');\n        }\n        const eligibleInputs = document.querySelectorAll(\"input[autocomplete$='webauthn']\");\n        if (eligibleInputs.length < 1) {\n            throw Error('No <input> with \"webauthn\" as the only or last value in its `autocomplete` attribute was detected');\n        }\n        options.mediation = 'conditional';\n        publicKey.allowCredentials = [];\n    }\n    options.publicKey = publicKey;\n    options.signal = WebAuthnAbortService.createNewAbortSignal();\n    let credential;\n    try {\n        credential = (await navigator.credentials.get(options));\n    }\n    catch (err) {\n        throw identifyAuthenticationError({ error: err, options });\n    }\n    if (!credential) {\n        throw new Error('Authentication was not completed');\n    }\n    const { id, rawId, response, type } = credential;\n    let userHandle = undefined;\n    if (response.userHandle) {\n        userHandle = bufferToBase64URLString(response.userHandle);\n    }\n    return {\n        id,\n        rawId: bufferToBase64URLString(rawId),\n        response: {\n            authenticatorData: bufferToBase64URLString(response.authenticatorData),\n            clientDataJSON: bufferToBase64URLString(response.clientDataJSON),\n            signature: bufferToBase64URLString(response.signature),\n            userHandle,\n        },\n        type,\n        clientExtensionResults: credential.getClientExtensionResults(),\n        authenticatorAttachment: toAuthenticatorAttachment(credential.authenticatorAttachment),\n    };\n}\n\nfunction platformAuthenticatorIsAvailable() {\n    if (!browserSupportsWebAuthn()) {\n        return new Promise((resolve) => resolve(false));\n    }\n    return PublicKeyCredential.isUserVerifyingPlatformAuthenticatorAvailable();\n}\n\nexport { WebAuthnAbortService, WebAuthnError, base64URLStringToBuffer, browserSupportsWebAuthn, browserSupportsWebAuthnAutofill, bufferToBase64URLString, platformAuthenticatorIsAvailable, startAuthentication, startRegistration };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}