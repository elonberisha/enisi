{"ast":null,"code":"var _s = $RefreshSig$();\n// Central API base configuration\nimport axios from 'axios';\nimport { useI18n } from './i18n';\n// Dinamik: nëse nuk ka REACT_APP_API_BASE, përdor host-in aktual (p.sh. IP LAN) me port 4000\nconst dynamicBase = (() => {\n  if (typeof window === 'undefined') return 'http://localhost:4000';\n  const host = window.location.hostname; // mund të jetë 192.168.x.x ose localhost\n  return `${window.location.protocol}//${host}:4000`;\n})();\nexport const API_BASE = process.env.REACT_APP_API_BASE || dynamicBase;\n// Always send cookies (session) to backend\naxios.defaults.withCredentials = true;\nexport const withBase = path => `${API_BASE}${path}`;\n\n// Simple global listeners (attached once) to dispatch custom events on network status\nif (typeof window !== 'undefined') {\n  window.addEventListener('online', () => document.dispatchEvent(new CustomEvent('app:online')));\n  window.addEventListener('offline', () => document.dispatchEvent(new CustomEvent('app:offline')));\n}\n\n// Axios response interceptor for network errors\naxios.interceptors.response.use(r => r, err => {\n  if (err.message === 'Network Error' || !err.response) {\n    document.dispatchEvent(new CustomEvent('app:network-error', {\n      detail: err\n    }));\n  }\n  return Promise.reject(err);\n});\n\n// Hook for components to subscribe to network events (optional usage)\nexport function useNetworkStatus() {\n  _s();\n  const {\n    t\n  } = (useI18n === null || useI18n === void 0 ? void 0 : useI18n()) || {\n    t: k => k\n  };\n  const [online, setOnline] = React.useState(typeof navigator !== 'undefined' ? navigator.onLine : true);\n  const [banner, setBanner] = React.useState(null);\n  React.useEffect(() => {\n    const onOn = () => {\n      setOnline(true);\n      setBanner(t('online_banner'));\n      setTimeout(() => setBanner(null), 2500);\n    };\n    const onOff = () => {\n      setOnline(false);\n      setBanner(t('offline_banner'));\n    };\n    document.addEventListener('app:online', onOn);\n    document.addEventListener('app:offline', onOff);\n    return () => {\n      document.removeEventListener('app:online', onOn);\n      document.removeEventListener('app:offline', onOff);\n    };\n  }, [t]);\n  return {\n    online,\n    banner\n  };\n}\n_s(useNetworkStatus, \"8tNDvoXB1D6uJGDyHOStNOScr1A=\");","map":{"version":3,"names":["axios","useI18n","dynamicBase","window","host","location","hostname","protocol","API_BASE","process","env","REACT_APP_API_BASE","defaults","withCredentials","withBase","path","addEventListener","document","dispatchEvent","CustomEvent","interceptors","response","use","r","err","message","detail","Promise","reject","useNetworkStatus","_s","t","k","online","setOnline","React","useState","navigator","onLine","banner","setBanner","useEffect","onOn","setTimeout","onOff","removeEventListener"],"sources":["C:/Users/Admin/Desktop/enisi/frontend/src/api.js"],"sourcesContent":["// Central API base configuration\r\nimport axios from 'axios';\r\nimport { useI18n } from './i18n';\r\n// Dinamik: nëse nuk ka REACT_APP_API_BASE, përdor host-in aktual (p.sh. IP LAN) me port 4000\r\nconst dynamicBase = (() => {\r\n\tif (typeof window === 'undefined') return 'http://localhost:4000';\r\n\tconst host = window.location.hostname; // mund të jetë 192.168.x.x ose localhost\r\n\treturn `${window.location.protocol}//${host}:4000`;\r\n})();\r\nexport const API_BASE = process.env.REACT_APP_API_BASE || dynamicBase;\r\n// Always send cookies (session) to backend\r\naxios.defaults.withCredentials = true;\r\nexport const withBase = (path) => `${API_BASE}${path}`;\r\n\r\n// Simple global listeners (attached once) to dispatch custom events on network status\r\nif (typeof window !== 'undefined') {\r\n\twindow.addEventListener('online', () => document.dispatchEvent(new CustomEvent('app:online')));\r\n\twindow.addEventListener('offline', () => document.dispatchEvent(new CustomEvent('app:offline')));\r\n}\r\n\r\n// Axios response interceptor for network errors\r\naxios.interceptors.response.use(\r\n\tr => r,\r\n\terr => {\r\n\t\tif (err.message === 'Network Error' || !err.response) {\r\n\t\t\tdocument.dispatchEvent(new CustomEvent('app:network-error', { detail: err }));\r\n\t\t}\r\n\t\treturn Promise.reject(err);\r\n\t}\r\n);\r\n\r\n// Hook for components to subscribe to network events (optional usage)\r\nexport function useNetworkStatus(){\r\n\tconst { t } = useI18n?.() || { t: (k)=>k };\r\n\tconst [online, setOnline] = React.useState(typeof navigator !== 'undefined' ? navigator.onLine : true);\r\n\tconst [banner, setBanner] = React.useState(null);\r\n\tReact.useEffect(()=>{\r\n\t\tconst onOn = () => { setOnline(true); setBanner(t('online_banner')); setTimeout(()=>setBanner(null), 2500); };\r\n\t\tconst onOff = () => { setOnline(false); setBanner(t('offline_banner')); };\r\n\t\tdocument.addEventListener('app:online', onOn);\r\n\t\tdocument.addEventListener('app:offline', onOff);\r\n\t\treturn () => { document.removeEventListener('app:online', onOn); document.removeEventListener('app:offline', onOff); };\r\n\t}, [t]);\r\n\treturn { online, banner };\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}